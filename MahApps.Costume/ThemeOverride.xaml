<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:xceed="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
                    xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters;assembly=Xceed.Wpf.Toolkit"
                    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit" >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="AvalonDockThemeOverride.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <conv:WizardPageButtonVisibilityConverter x:Key="WizardPageButtonVisibilityConverter" />

    <!--Override TabItem-->
    <Style BasedOn="{StaticResource MetroTabItem}" TargetType="{x:Type TabItem}">
        <Setter Property="FrameworkElement.Margin" Value="2,0,2,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="Border" HorizontalAlignment="Stretch" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <DockPanel.Resources>
                                <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                            </DockPanel.Resources>
                            <Controls:ContentControlEx x:Name="ContentSite" ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                       ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                       FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding Controls:ControlsHelper.HeaderFontStretch}"
                                                       FontWeight="{TemplateBinding Controls:ControlsHelper.HeaderFontWeight}" Foreground="{TemplateBinding Foreground}"
                                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                       ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}"
                                                       DockPanel.Dock="Top" Margin="2">
                                <Controls:ContentControlEx.Content>
                                    <TextBlock x:Name="header" Text="{TemplateBinding Header}" Foreground="{DynamicResource LabelTextBrush}"/>
                                </Controls:ContentControlEx.Content>
                            </Controls:ContentControlEx>
                            <Rectangle x:Name="Underline" Height="3" HorizontalAlignment="Stretch"
                                       Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, 
                                       Path=(Controls:TabControlHelper.IsUnderlined), Converter={StaticResource BooleanToVisibilityConverter}}"
                                       DockPanel.Dock="Bottom" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Left" />
                            <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Right" />
                            <Setter Property="Width" TargetName="Underline" Value="3" />
                            <Setter Property="Height" TargetName="Underline" Value="Auto" />
                            <Setter Property="Margin" TargetName="Underline" Value="1,0,0,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Top">
                            <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Top" />
                            <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Bottom" />
                            <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Right" />
                            <Setter Property="Height" TargetName="Underline" Value="3" />
                            <Setter Property="Width" TargetName="Underline" Value="Auto" />
                            <Setter Property="Margin" TargetName="Underline" Value="0,1,0,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Right" />
                            <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Left" />
                            <Setter Property="Width" TargetName="Underline" Value="3" />
                            <Setter Property="Height" TargetName="Underline" Value="Auto" />
                            <Setter Property="Margin" TargetName="Underline" Value="0,0,1,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Bottom" />
                            <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Top" />
                            <Setter Property="Height" TargetName="Underline" Value="3" />
                            <Setter Property="Width" TargetName="Underline" Value="Auto" />
                            <Setter Property="Margin" TargetName="Underline" Value="0,0,0,1" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="TextElement.Foreground" TargetName="header" Value="{DynamicResource MetroDataGrid.HighlightTextBrush}" />
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource AccentColorBrush}" />
                            <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger SourceName="ContentSite" Property="IsMouseOver" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource AccentColorBrush}" />
                            <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="ContentSite" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource MetroDataGrid.HighlightTextBrush}" />
                            <!--<Setter Property="Fill" TargetName="Underline" Value="{DynamicResource HighlightBrush}" />-->
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="ContentSite" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource MetroDataGrid.HighlightTextBrush}" />
                            <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource AccentColorBrush}" />
                            <!--<Setter Property="Background" Value="{DynamicResource AccentColorBrush3}" />-->
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="ContentSite" Value="False" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" TargetName="header" Value="{DynamicResource LabelTextBrush}" />
                            <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource AccentColorBrush4}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Override DataGridColumnHeader-->
    <Style BasedOn="{StaticResource MetroDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource MetroDataGrid.HighlightTextBrush}" />
        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal" />
    </Style>

    <!--Override GroupBox-->
    <Style BasedOn="{StaticResource MetroGroupBox}" TargetType="{x:Type GroupBox}">
        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal" />
    </Style>

    <!--ToolBarTray-->
    <Style TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush4}" />
    </Style>

    <!--ComboBox-->
    <!--Don't use MahApps styel because it's slow.-->
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="IsEditable" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <!--ListBox-->
    <!--<Style TargetType="{x:Type ListBox}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush3}"/>
    </Style>-->

    <!--Xceed Control Theme overrides-->

    <!--Wizard: Move the Cancel button to the right side-->
    <Style TargetType="{x:Type xceed:Wizard}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBorderKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xceed:Wizard}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <Grid >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <ContentPresenter Content="{Binding CurrentPage, RelativeSource={RelativeSource TemplatedParent}}" />

                            <Border Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,0" Padding="7">
                                <StackPanel>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Button Name="PART_HelpButton" Grid.Column="0" MinWidth="75" 
                                                Command="xceed:WizardCommands.Help" Content="{TemplateBinding HelpButtonContent}">
                                            <Button.Visibility>
                                                <MultiBinding Converter="{StaticResource WizardPageButtonVisibilityConverter}">
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="HelpButtonVisibility" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="CurrentPage.HelpButtonVisibility" />
                                                </MultiBinding>
                                            </Button.Visibility>
                                        </Button>
                                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                                            <Button Name="PART_BackButton" Margin="4,0" MinWidth="75" Command="xceed:WizardCommands.PreviousPage" 
                                                    Content="{TemplateBinding BackButtonContent}">
                                                <Button.Visibility>
                                                    <MultiBinding Converter="{StaticResource WizardPageButtonVisibilityConverter}">
                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="BackButtonVisibility" />
                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="CurrentPage.BackButtonVisibility" />
                                                    </MultiBinding>
                                                </Button.Visibility>
                                            </Button>
                                            <Button Name="PART_NextButton" Margin="4,0" MinWidth="75" Command="xceed:WizardCommands.NextPage"
                                                    Content="{TemplateBinding NextButtonContent}">
                                                <Button.Visibility>
                                                    <MultiBinding Converter="{StaticResource WizardPageButtonVisibilityConverter}">
                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="NextButtonVisibility" />
                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="CurrentPage.NextButtonVisibility" />
                                                    </MultiBinding>
                                                </Button.Visibility>
                                            </Button>
                                            <Button Name="PART_FinishButton" Margin="4,0" MinWidth="75" Command="xceed:WizardCommands.Finish" 
                                                    Content="{TemplateBinding FinishButtonContent}">
                                                <Button.Visibility>
                                                    <MultiBinding Converter="{StaticResource WizardPageButtonVisibilityConverter}">
                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="FinishButtonVisibility" />
                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="CurrentPage.FinishButtonVisibility" />
                                                    </MultiBinding>
                                                </Button.Visibility>
                                            </Button>
                                            <Button Name="PART_CancelButton" Margin="4,0,7,0" MinWidth="75" Command="xceed:WizardCommands.Cancel" 
                                                    Content="{TemplateBinding CancelButtonContent}">
                                                <Button.Visibility>
                                                    <MultiBinding Converter="{StaticResource WizardPageButtonVisibilityConverter}">
                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="CancelButtonVisibility" />
                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="CurrentPage.CancelButtonVisibility" />
                                                    </MultiBinding>
                                                </Button.Visibility>
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--MultiLineTextEditor-->
    <Style TargetType="{x:Type xctk:MultiLineTextEditor}">
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <!--DecimalUpDown-->
    <Style TargetType="{x:Type xceed:DecimalUpDown}">
        <Setter Property="Foreground" Value="{DynamicResource LabelTextBrush}" />
        <Setter Property="MinHeight" Value="26" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--DoubleUpDown-->
    <Style TargetType="{x:Type xceed:DoubleUpDown}">
        <Setter Property="Foreground" Value="{DynamicResource LabelTextBrush}" />
        <Setter Property="MinHeight" Value="26" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--IntegerUpDown-->
    <Style TargetType="{x:Type xceed:IntegerUpDown}">
        <Setter Property="Foreground" Value="{DynamicResource LabelTextBrush}" />
        <Setter Property="MinHeight" Value="26" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--LongUpDown-->
    <Style TargetType="{x:Type xceed:LongUpDown}">
        <Setter Property="Foreground" Value="{DynamicResource LabelTextBrush}" />
        <Setter Property="MinHeight" Value="26" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>