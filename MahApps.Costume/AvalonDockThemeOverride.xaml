<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:localThemes="clr-namespace:Xceed.Wpf.AvalonDock.Themes"
                    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Xceed.Wpf.AvalonDock" 
                    xmlns:avalonDock="clr-namespace:Xceed.Wpf.AvalonDock;assembly=Xceed.Wpf.AvalonDock" 
                    xmlns:avalonDockLayout="clr-namespace:Xceed.Wpf.AvalonDock.Layout;assembly=Xceed.Wpf.AvalonDock" 
                    xmlns:avalonDockControls="clr-namespace:Xceed.Wpf.AvalonDock.Controls;assembly=Xceed.Wpf.AvalonDock" 
                    xmlns:avalonDockConverters="clr-namespace:Xceed.Wpf.AvalonDock.Converters;assembly=Xceed.Wpf.AvalonDock" 
                    xmlns:avalonDockProperties="clr-namespace:Xceed.Wpf.AvalonDock.Properties;assembly=Xceed.Wpf.AvalonDock"
                    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls" >

    <SolidColorBrush x:Key="AvalonDock_ThemeMetro_BaseColor1" Color="Transparent" />
    <SolidColorBrush x:Key="AvalonDock_ThemeMetro_BaseColor2" Color="Black" />
    <SolidColorBrush x:Key="AvalonDock_ThemeMetro_BaseColor3" Color="#41B1E1" />
    <SolidColorBrush x:Key="AvalonDock_ThemeMetro_BaseColor4" Color="#5EA1C0" />
    <SolidColorBrush x:Key="AvalonDock_ThemeMetro_BaseColor5" Color="#333333" />
    <SolidColorBrush x:Key="AvalonDock_ThemeMetro_BaseColor6" Color="#8C8E94" />
    <SolidColorBrush x:Key="AvalonDock_ThemeMetro_BaseColor7" Color="#EEEEEE" />
    <SolidColorBrush x:Key="AvalonDock_ThemeMetro_Background" Color="Transparent" />

    <avalonDockConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <avalonDockConverters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />
    <avalonDockConverters:AnchorSideToOrientationConverter x:Key="AnchorSideToOrientationConverter" />
    <avalonDockConverters:AnchorSideToAngleConverter x:Key="AnchorSideToAngleConverter" />
    <avalonDockConverters:NullToDoNothingConverter x:Key="NullToDoNothingConverter" />
    <avalonDockConverters:LayoutItemFromLayoutModelConverter x:Key="LayoutItemFromLayoutModelConverter" />
    <avalonDockConverters:ActivateCommandLayoutItemFromLayoutModelConverter x:Key="ActivateCommandLayoutItemFromLayoutModelConverter" />
    <Style x:Key="AvalonDock_ThemeMetro_ToolButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Control.Background" Value="{DynamicResource AvalonDock_ThemeMetro_Background}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_Background}" />
        <Setter Property="Control.Padding" Value="0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AvalonDock_ThemeMetro_ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Control.Background" Value="{DynamicResource AvalonDock_ThemeMetro_Background}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_Background}" />
        <Setter Property="Control.Padding" Value="0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AvalonDock_ThemeMetro_DocumentPaneControlStyle" TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
        <Setter Property="Control.BorderBrush" Value="{x:Null}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Background="{DynamicResource AvalonDock_ThemeMetro_Background}" Grid.RowSpan="2" />
                        <Grid ZIndex="1" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type avalonDockControls:LayoutDocumentPaneControl}}, Path=Model.ShowHeader, Converter={StaticResource BoolToVisibilityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <avalonDockControls:DocumentPaneTabPanel Name="HeaderPanel" Grid.Column="0" IsItemsHost="True" Margin="2,0,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" />
                            <avalonDockControls:DropDownButton Name="MenuDropDownButton" Style="{StaticResource AvalonDock_ThemeMetro_ToolButtonStyle}" Focusable="False" VerticalAlignment="Center" Grid.Column="1">
                                <avalonDockControls:DropDownButton.DropDownContextMenu>
                                    <avalonDockControls:ContextMenuEx ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}">
                                        <ContextMenu.ItemContainerStyle>
                                            <Style TargetType="{x:Type avalonDockControls:MenuItemEx}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                                <Setter Property="HeaderedItemsControl.HeaderTemplate" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}" />
                                                <Setter Property="HeaderedItemsControl.HeaderTemplateSelector" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}" />
                                                <Setter Property="avalonDockControls:MenuItemEx.IconTemplate" Value="{Binding Path=Root.Manager.IconContentTemplate}" />
                                                <Setter Property="avalonDockControls:MenuItemEx.IconTemplateSelector" Value="{Binding Path=Root.Manager.IconContentTemplateSelector}" />
                                                <Setter Property="MenuItem.Command" Value="{Binding Path=., Converter={StaticResource ActivateCommandLayoutItemFromLayoutModelConverter}}" />
                                            </Style>
                                        </ContextMenu.ItemContainerStyle>
                                    </avalonDockControls:ContextMenuEx>
                                </avalonDockControls:DropDownButton.DropDownContextMenu>
                                <Image Source="Images/PinDocMenu.png" />
                            </avalonDockControls:DropDownButton>
                        </Grid>
                        <Border Name="ContentPanel" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Cycle" Padding="0,1,0,2">
                            <ContentPresenter Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="0,2,0,2" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="MenuDropDownButton" Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="MenuDropDownButton" Property="ContentControl.Content">
                                <Setter.Value>
                                    <Image Source="Images/PinDocMenu_Black.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger SourceName="MenuDropDownButton" Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="MenuDropDownButton" Property="ContentControl.Content">
                                <Setter.Value>
                                    <Image Source="Images/PinDocMenu_Black.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                        </Trigger>
                        <DataTrigger Value="0" Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}">
                            <Setter TargetName="MenuDropDownButton" Property="UIElement.Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsControl.ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="TabItem.IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="Control.Background" Value="{DynamicResource AvalonDock_ThemeMetro_Background}" />
                    <Setter Property="Control.BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_Background}" />
                    <Setter Property="Control.Foreground" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor5}" />
                    <Setter Property="FrameworkElement.ToolTip" Value="{Binding ToolTip}" />
                    <Setter Property="Control.Padding" Value="4" />
                    <Setter Property="FrameworkElement.Margin" Value="2,0,2,0" />
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Border x:Name="Border" HorizontalAlignment="Stretch" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <DockPanel.Resources>
                                            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                                        </DockPanel.Resources>
                                        <Controls:ContentControlEx x:Name="ContentSite" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                       ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                       FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding Controls:ControlsHelper.HeaderFontStretch}"
                                                       FontWeight="{TemplateBinding Controls:ControlsHelper.HeaderFontWeight}" Foreground="{TemplateBinding Foreground}"
                                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                       ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}"
                                                       DockPanel.Dock="Top" />
                                        <Rectangle x:Name="Underline" Height="2" HorizontalAlignment="Stretch"
                                       Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, 
                                       Path=(Controls:TabControlHelper.IsUnderlined), Converter={StaticResource BooleanToVisibilityConverter}}"
                                       DockPanel.Dock="Bottom" Margin="0, 1, 0, 0"/>
                                    </DockPanel>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="TabStripPlacement" Value="Left">
                                        <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Left" />
                                        <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Right" />
                                        <Setter Property="Width" TargetName="Underline" Value="2" />
                                        <Setter Property="Height" TargetName="Underline" Value="Auto" />
                                        <Setter Property="Margin" TargetName="Underline" Value="1,0,0,0" />
                                    </Trigger>
                                    <Trigger Property="TabStripPlacement" Value="Top">
                                        <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Top" />
                                        <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Bottom" />
                                        <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Right" />
                                        <Setter Property="Height" TargetName="Underline" Value="2" />
                                        <Setter Property="Width" TargetName="Underline" Value="Auto" />
                                        <Setter Property="Margin" TargetName="Underline" Value="0,1,0,0" />
                                    </Trigger>
                                    <Trigger Property="TabStripPlacement" Value="Right">
                                        <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Right" />
                                        <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Left" />
                                        <Setter Property="Width" TargetName="Underline" Value="2" />
                                        <Setter Property="Height" TargetName="Underline" Value="Auto" />
                                        <Setter Property="Margin" TargetName="Underline" Value="0,0,1,0" />
                                    </Trigger>
                                    <Trigger Property="TabStripPlacement" Value="Bottom">
                                        <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Bottom" />
                                        <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Top" />
                                        <Setter Property="Height" TargetName="Underline" Value="2" />
                                        <Setter Property="Width" TargetName="Underline" Value="Auto" />
                                        <Setter Property="Margin" TargetName="Underline" Value="0,0,0,1" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource MetroDataGrid.HighlightTextBrush}" />
                                        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                                        <!--<Setter Property="Fill" TargetName="Underline" Value="{DynamicResource MetroDataGrid.HighlightTextBrush}" />-->
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="false">
                                        <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource HighlightBrush}" />
                                        <Setter Property="Background"  Value="Transparent" />
                                        <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource AccentColorBrush}" />
                                    </Trigger>
                                    <Trigger SourceName="ContentSite" Property="IsMouseOver" Value="True">
                                        <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource AccentColorBrush}" />
                                        <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource AccentColorBrush}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" SourceName="ContentSite" Value="True" />
                                            <Condition Property="IsSelected" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource MetroDataGrid.HighlightTextBrush}" />
                                        <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource HighlightBrush}" />
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" SourceName="ContentSite" Value="True" />
                                            <Condition Property="IsSelected" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource MetroDataGrid.HighlightTextBrush}" />
                                        <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource HighlightBrush}" />
                                        <Setter Property="Background" Value="{DynamicResource AccentColorBrush2}" />
                                    </MultiTrigger>
                                    <Trigger Property="Selector.IsSelected" Value="True">
                                        <Setter Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor5}" Property="Control.BorderBrush" />
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>

                            <!--<ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid SnapsToDevicePixels="True" Margin="0,4,4,4">
                                    <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0,3,0,0" Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}" />
                                    <ContentPresenter Name="Content" Margin="2" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Selector.IsSelected" Value="True">
                                        <Setter Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor5}" Property="Control.BorderBrush" />
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                    </Trigger>
                                    <DataTrigger Value="True" Binding="{Binding IsActive}">
                                        <Setter Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor3}" Property="Control.BorderBrush" />
                                        <Setter Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor5}" Property="Control.Foreground" />
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                    </DataTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="UIElement.IsMouseOver" Value="True" />
                                            <Condition Property="Selector.IsSelected" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor4}" Property="Control.BorderBrush" />
                                        <Setter Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor5}" Property="Control.Foreground" />
                                        <Setter Property="Panel.ZIndex" Value="0" />
                                    </MultiTrigger>
                                    <Trigger Property="UIElement.IsEnabled" Value="False">
                                        <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>-->
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsControl.ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutDocumentTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TabControl.ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutDocumentControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TabControl.Background" Value="Transparent"/>
        <Setter Property="TabControl.BorderBrush" Value="{StaticResource {x:Static SystemColors.ActiveBorderBrushKey}}"/>
    </Style>
    <Style x:Key="AvalonDock_ThemeMetro_AnchorablePaneControlStyle" TargetType="{x:Type avalonDockControls:LayoutAnchorablePaneControl}">
        <Setter Property="TabControl.TabStripPlacement" Value="Bottom" />
        <Setter Property="Control.Padding" Value="0" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Control.Foreground" Value="{Binding Model.Root.Manager.Foreground, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Control.Background" Value="{Binding Model.Root.Manager.Background, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorablePaneControl}">
                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Background="{DynamicResource AvalonDock_ThemeMetro_Background}" Grid.RowSpan="2" />
                        <Border Name="ContentPanel" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="0" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Cycle">
                            <ContentPresenter Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                        <avalonDockControls:AnchorablePaneTabPanel Name="HeaderPanel" Margin="0,0,2,2" IsItemsHost="True" Grid.Row="1" KeyboardNavigation.TabIndex="1" ZIndex="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                        </Trigger>
                        <DataTrigger Value="1" Binding="{Binding Items.Count, RelativeSource={RelativeSource Self}}">
                            <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="0" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="ItemsControl.ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Control.Background" Value="{DynamicResource AvalonDock_ThemeMetro_Background}" />
                    <Setter Property="Control.BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_Background}" />
                    <Setter Property="Control.Foreground" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor5}" />
                    <Setter Property="TabItem.IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="FrameworkElement.ToolTip" Value="{Binding ToolTip}" />
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid SnapsToDevicePixels="True">
                                    <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" Margin="4" BorderThickness="0,2,0,0" Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}">
                                        <ContentPresenter Name="Content" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Selector.IsSelected" Value="True">
                                        <Setter Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor5}" Property="Control.BorderBrush" />
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                    </Trigger>
                                    <DataTrigger Value="True" Binding="{Binding IsActive}">
                                        <Setter Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor3}" Property="Control.BorderBrush" />
                                        <Setter Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor5}" Property="Control.Foreground" />
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                    </DataTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="UIElement.IsMouseOver" Value="True" />
                                            <Condition Property="Selector.IsSelected" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor4}" Property="Control.BorderBrush" />
                                        <Setter Property="Panel.ZIndex" Value="0" />
                                    </MultiTrigger>
                                    <Trigger Property="UIElement.IsEnabled" Value="False">
                                        <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}" Value="1">
                            <Setter Property="UIElement.Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>-->
        <Setter Property="ItemsControl.ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutAnchorableTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TabControl.ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutAnchorableControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type avalonDockControls:AnchorablePaneTitle}" TargetType="{x:Type avalonDockControls:AnchorablePaneTitle}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="0,3,0,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <avalonDockControls:DropDownControlArea DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}" DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                <ContentPresenter Name="Header" Margin="2,0,0,0" TextElement.Foreground="{DynamicResource AvalonDock_ThemeMetro_BaseColor2}" Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
                            </avalonDockControls:DropDownControlArea>
                            <avalonDockControls:DropDownButton Name="MenuDropDownButton" VerticalAlignment="Center" Style="{StaticResource AvalonDock_ThemeMetro_ToolButtonStyle}" Focusable="False" Grid.Column="1" ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}" DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}" DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                <Image Name="PART_ImgMenuPin" Source="Images/PinMenu.png" />
                            </avalonDockControls:DropDownButton>
                            <Button Name="PART_AutoHidePin" Grid.Column="2" Focusable="False" Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnAutoHide_Hint}" Command="{Binding Path=LayoutItem.AutoHideCommand, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                                <Image Name="PART_ImgAutoHidePin" Source="Images/PinAutoHide.png" />
                            </Button>
                            <Button Name="PART_HidePin" Grid.Column="3" Focusable="False" Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}" Command="{Binding Path=LayoutItem.HideCommand, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                                <Image Name="PART_ImgHidePin" Source="Images/PinClose.png" />
                            </Button>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Value="True" Binding="{Binding Model.IsAutoHidden, RelativeSource={RelativeSource Mode=Self}}">
                            <Setter TargetName="PART_AutoHidePin" Property="FrameworkElement.LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Value="True" Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}">
                            <Setter Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor3}" Property="Control.BorderBrush" />
                            <Setter Property="Control.BorderThickness" Value="0,3,0,0" />
                        </DataTrigger>
                        <DataTrigger Value="True" Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}">
                            <Setter TargetName="PART_ImgAutoHidePin" Property="Image.Source" Value="Images/PinAutoHide_Dark.png" />
                            <Setter TargetName="PART_ImgHidePin" Property="Image.Source" Value="Images/PinClose_Dark.png" />
                            <Setter TargetName="PART_ImgMenuPin" Property="Image.Source" Value="Images/PinMenu_Dark.png" />
                        </DataTrigger>
                        <Trigger SourceName="MenuDropDownButton" Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgMenuPin" Property="Image.Source" Value="Images/PinMenu_Black.png" />
                        </Trigger>
                        <Trigger SourceName="MenuDropDownButton" Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="PART_ImgMenuPin" Property="Image.Source" Value="Images/PinMenu_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_AutoHidePin" Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgAutoHidePin" Property="Image.Source" Value="Images/PinAutoHide_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_HidePin" Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgHidePin" Property="Image.Source" Value="Images/PinClose_Black.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="AvalonDock_ThemeMetro_AnchorSideTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorSideControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel MinWidth="4" MinHeight="4" Orientation="{Binding Path=Model.Side, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutAnchorSideControl}, Mode=FindAncestor}, Converter={StaticResource AnchorSideToOrientationConverter}}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>
    <ControlTemplate x:Key="AvalonDock_ThemeMetro_AnchorGroupTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorGroupControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <ItemsControl.LayoutTransform>
                <RotateTransform Angle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Model.Parent.Side, Converter={StaticResource AnchorSideToAngleConverter}}" />
            </ItemsControl.LayoutTransform>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>
    <ControlTemplate x:Key="AvalonDock_ThemeMetro_AnchorTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorControl}">
        <Border Name="Bd" BorderThickness="0,2,0,0" BorderBrush="{TemplateBinding Control.BorderBrush}" Margin="4" Padding="2">
            <ContentPresenter TextElement.Foreground="{DynamicResource AvalonDock_ThemeMetro_BaseColor2}" Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}" ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="avalonDockControls:LayoutAnchorControl.Side" Value="Right">
                <Setter TargetName="Bd" Property="Border.BorderThickness" Value="0,0,0,2" />
            </Trigger>
            <Trigger Property="avalonDockControls:LayoutAnchorControl.Side" Value="Bottom">
                <Setter TargetName="Bd" Property="Border.BorderThickness" Value="0,2,0,0" />
            </Trigger>
            <Trigger Property="avalonDockControls:LayoutAnchorControl.Side" Value="Top">
                <Setter TargetName="Bd" Property="Border.BorderThickness" Value="0,0,0,2" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="UIElement.IsMouseOver" Value="True" />
                    <Condition Property="Selector.IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor4}" Property="Control.BorderBrush" />
            </MultiTrigger>
            <DataTrigger Value="true" Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}">
                <Setter Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor3}" Property="Control.BorderBrush" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{x:Type avalonDockControls:OverlayWindow}" TargetType="{x:Type avalonDockControls:OverlayWindow}">
        <Setter Property="Control.Background" Value="{DynamicResource AvalonDock_ThemeMetro_Background}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:OverlayWindow}">
                    <Canvas Name="PART_DropTargetsContainer" Opacity="0.9">
                        <Path Name="PART_PreviewBox" Fill="#FFF0F8FF" StrokeThickness="2" Stroke="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        <Grid Name="PART_DockingManagerDropTargets">
                            <Image Name="PART_DockingManagerDropTargetLeft" VerticalAlignment="Center" HorizontalAlignment="Left" Source="Images/DockAnchorableLeft.PNG" Stretch="None" />
                            <Image Name="PART_DockingManagerDropTargetRight" VerticalAlignment="Center" HorizontalAlignment="Right" Source="Images/DockAnchorableRight.PNG" Stretch="None" />
                            <Image Name="PART_DockingManagerDropTargetBottom" VerticalAlignment="Bottom" HorizontalAlignment="Center" Source="Images/DockAnchorableBottom.PNG" Stretch="None" />
                            <Image Name="PART_DockingManagerDropTargetTop" VerticalAlignment="Top" HorizontalAlignment="Center" Source="Images/DockAnchorableTop.PNG" Stretch="None" />
                        </Grid>
                        <Grid Name="PART_AnchorablePaneDropTargets">
                            <Grid Width="112" Height="112" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Image Grid.ColumnSpan="3" Grid.RowSpan="3" Source="Images/DockPaneEmpty.png" Stretch="None" Margin="0,0.5,0,-0.5" />
                                <Border Name="PART_AnchorablePaneDropTargetTop" Grid.Column="1" Grid.Row="0" Margin="0,3.5,0, 0">
                                    <Image Source="Images/DockDocumentAsAnchorableTop.png" Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetRight" Grid.Column="2" Grid.Row="1" Margin="2">
                                    <Image Source="Images/DockDocumentAsAnchorableRight.png" Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetBottom" Grid.Column="1" Grid.Row="2" Margin="0,-0.5,0,0">
                                    <Image Source="Images/DockDocumentAsAnchorableBottom.png" Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetLeft" Grid.Column="0" Grid.Row="1" Margin="2">
                                    <Image Source="Images/DockDocumentAsAnchorableLeft.png" Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetInto" Grid.Column="1" Grid.Row="1" Margin="0,0.5,0,0">
                                    <Image Source="Images/DockDocumentInside.png" Stretch="None" />
                                </Border>
                            </Grid>
                        </Grid>
                        <Grid Name="PART_DocumentPaneDropTargets">
                            <Grid Width="112" Height="112" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Image Grid.ColumnSpan="3" Grid.RowSpan="3" Source="Images/DockPaneEmpty.PNG" Stretch="None" />
                                <Border Name="PART_DocumentPaneDropTargetTop" Grid.Column="1" Grid.Row="0" Margin="2">
                                    <Image Source="Images/DockDocumentTop.png" Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetRight" Grid.Column="2" Grid.Row="1" Margin="2">
                                    <Image Source="Images/DockDocumentRight.png" Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetBottom" Grid.Column="1" Grid.Row="2" Margin="2">
                                    <Image Source="Images/DockDocumentBottom.png" Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetLeft" Grid.Column="0" Grid.Row="1" Margin="2">
                                    <Image Source="Images/DockDocumentLeft.png" Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetInto" Grid.Column="1" Grid.Row="1">
                                    <Image Source="Images/DockDocumentInside.png" Stretch="None" />
                                </Border>
                            </Grid>
                        </Grid>
                        <Grid Name="PART_DocumentPaneFullDropTargets">
                            <Grid Width="184" Height="184" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Image Grid.ColumnSpan="5" Grid.RowSpan="5" Source="Images/DockPaneLargeEmpty.PNG" Stretch="None" />
                                <Border Name="PART_DocumentPaneFullDropTargetTop" Grid.Column="2" Grid.Row="1">
                                    <Image Source="Images/DockDocumentTop.png" Stretch="None" Margin="2" />
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetRight" Grid.Column="3" Grid.Row="2">
                                    <Image Source="Images/DockDocumentRight.png" Stretch="None" Margin="2" />
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetBottom" Grid.Column="2" Grid.Row="3">
                                    <Image Source="Images/DockDocumentBottom.png" Stretch="None" Margin="2" />
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetLeft" Grid.Column="1" Grid.Row="2">
                                    <Image Source="Images/DockDocumentLeft.png" Stretch="None" Margin="2" />
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetInto" Grid.Column="2" Grid.Row="2">
                                    <Image Source="Images/DockDocumentInside.png" Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetTopAsAnchorablePane" Grid.Column="2" Grid.Row="0">
                                    <Image Source="Images/DockDocumentAsAnchorableTop.png" Stretch="None" Margin="2" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetRightAsAnchorablePane" Grid.Column="4" Grid.Row="2">
                                    <Image Source="Images/DockDocumentAsAnchorableRight.png" Stretch="None" Margin="2" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetBottomAsAnchorablePane" Grid.Column="2" Grid.Row="4">
                                    <Image Source="Images/DockDocumentAsAnchorableBottom.png" Stretch="None" Margin="2" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetLeftAsAnchorablePane" Grid.Column="0" Grid.Row="2">
                                    <Image Source="Images/DockDocumentAsAnchorableLeft.png" Stretch="None" Margin="2" />
                                </Border>
                            </Grid>
                        </Grid>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="AvalonDock_ThemeMetro_DocumentHeaderTemplate">
        <TextBlock TextTrimming="CharacterEllipsis" Text="{Binding Title}" />
    </DataTemplate>
    <DataTemplate x:Key="AvalonDock_ThemeMetro_AnchorableHeaderTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Image Name="icon" Stretch="Uniform" Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}" />
            <TextBlock Name="title" Margin="4,0,0,0" TextTrimming="CharacterEllipsis" Grid.Column="1" Text="{Binding Title}" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IconSource}" Value="{x:Null}">
                <Setter TargetName="title" Property="FrameworkElement.Margin" Value="0" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="AvalonDock_ThemeMetro_DocumentTitleTemplate">
        <TextBlock TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Text="{Binding Title}" />
    </DataTemplate>
    <DataTemplate x:Key="AvalonDock_ThemeMetro_AnchorableTitleTemplate">
        <TextBlock TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Text="{Binding Title}" />
    </DataTemplate>
    <DataTemplate x:Key="AvalonDock_ThemeMetro_IconContentTemplate">
        <Image Stretch="Uniform" Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}" />
    </DataTemplate>
    <ContextMenu x:Key="AvalonDock_ThemeMetro_AnchorableContextMenu">
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_Float}" Command="{Binding Path=FloatCommand}" />
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_Dock}" Command="{Binding Path=DockCommand}" />
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_DockAsDocument}" Command="{Binding Path=DockAsDocumentCommand}" />
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_AutoHide}" Command="{Binding Path=AutoHideCommand}" />
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_Hide}" Command="{Binding Path=HideCommand}" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
    </ContextMenu>
    <ContextMenu x:Key="AvalonDock_ThemeMetro_DocumentContextMenu">
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_Close}" Command="{Binding Path=CloseCommand}" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_CloseAllButThis}" Command="{Binding Path=CloseAllButThisCommand}" />
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_CloseAll}" Command="{Binding Path=CloseAllCommand}" />
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_Float}" Command="{Binding Path=FloatCommand}" />
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_DockAsDocument}" Command="{Binding Path=DockAsDocumentCommand}" />
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_NewHorizontalTabGroup}" Command="{Binding Path=NewHorizontalTabGroupCommand}" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
            <MenuItem.Icon>
                <Image Source="Images/HTabGroup.png" Stretch="Uniform" Width="14" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_NewVerticalTabGroup}" Command="{Binding Path=NewVerticalTabGroupCommand}" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
            <MenuItem.Icon>
                <Image Source="Images/VTabGroup.png" Stretch="Uniform" Width="14" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_MoveToNextTabGroup}" Command="{Binding Path=MoveToNextTabGroupCommand}" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_MoveToPreviousTabGroup}" Command="{Binding Path=MoveToPreviousTabGroupCommand}" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
    </ContextMenu>
    <Style x:Key="{x:Type avalonDock:DockingManager}" TargetType="{x:Type avalonDock:DockingManager}">
        <Setter Property="Control.Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor1}" />
        <Setter Property="avalonDock:DockingManager.DocumentPaneControlStyle" Value="{StaticResource AvalonDock_ThemeMetro_DocumentPaneControlStyle}" />
        <Setter Property="avalonDock:DockingManager.AnchorablePaneControlStyle" Value="{StaticResource AvalonDock_ThemeMetro_AnchorablePaneControlStyle}" />
        <Setter Property="avalonDock:DockingManager.AnchorSideTemplate" Value="{StaticResource AvalonDock_ThemeMetro_AnchorSideTemplate}" />
        <Setter Property="avalonDock:DockingManager.AnchorGroupTemplate" Value="{StaticResource AvalonDock_ThemeMetro_AnchorGroupTemplate}" />
        <Setter Property="avalonDock:DockingManager.AnchorTemplate" Value="{StaticResource AvalonDock_ThemeMetro_AnchorTemplate}" />
        <Setter Property="avalonDock:DockingManager.DocumentHeaderTemplate" Value="{StaticResource AvalonDock_ThemeMetro_DocumentHeaderTemplate}" />
        <Setter Property="avalonDock:DockingManager.AnchorableHeaderTemplate" Value="{StaticResource AvalonDock_ThemeMetro_AnchorableHeaderTemplate}" />
        <Setter Property="avalonDock:DockingManager.DocumentTitleTemplate" Value="{StaticResource AvalonDock_ThemeMetro_DocumentTitleTemplate}" />
        <Setter Property="avalonDock:DockingManager.AnchorableTitleTemplate" Value="{StaticResource AvalonDock_ThemeMetro_AnchorableTitleTemplate}" />
        <Setter Property="avalonDock:DockingManager.AnchorableContextMenu" Value="{StaticResource AvalonDock_ThemeMetro_AnchorableContextMenu}" />
        <Setter Property="avalonDock:DockingManager.DocumentContextMenu" Value="{StaticResource AvalonDock_ThemeMetro_DocumentContextMenu}" />
        <Setter Property="avalonDock:DockingManager.DocumentPaneMenuItemHeaderTemplate" Value="{StaticResource AvalonDock_ThemeMetro_DocumentHeaderTemplate}" />
        <Setter Property="avalonDock:DockingManager.IconContentTemplate" Value="{StaticResource AvalonDock_ThemeMetro_IconContentTemplate}" />
        <Setter Property="avalonDock:DockingManager.GridSplitterWidth" Value="5" />
        <Setter Property="avalonDock:DockingManager.GridSplitterHeight" Value="5" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDock:DockingManager}">
                    <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Content="{TemplateBinding avalonDock:DockingManager.LayoutRootPanel}" Grid.Column="1" Grid.Row="1" />
                            <ContentPresenter Content="{TemplateBinding avalonDock:DockingManager.RightSidePanel}" Grid.Column="2" Grid.Row="1" />
                            <ContentPresenter Content="{TemplateBinding avalonDock:DockingManager.LeftSidePanel}" Grid.Column="0" Grid.Row="1" />
                            <ContentPresenter Content="{TemplateBinding avalonDock:DockingManager.TopSidePanel}" Grid.Column="1" Grid.Row="0" />
                            <ContentPresenter Content="{TemplateBinding avalonDock:DockingManager.BottomSidePanel}" Grid.Column="1" Grid.Row="2" />
                            <ContentPresenter Name="PART_AutoHideArea" Content="{TemplateBinding avalonDock:DockingManager.AutoHideWindow}" VerticalAlignment="{TemplateBinding FrameworkElement.VerticalAlignment}" HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}" Grid.Column="1" Grid.Row="1" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type avalonDockControls:LayoutGridResizerControl}" TargetType="{x:Type avalonDockControls:LayoutGridResizerControl}">
        <Setter Property="Control.Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor7}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutGridResizerControl}">
                    <Border Background="{TemplateBinding Control.Background}" Margin="2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type avalonDockControls:LayoutDocumentControl}" TargetType="{x:Type avalonDockControls:LayoutDocumentControl}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentControl}">
                    <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
                        <ContentPresenter Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding LayoutItem.View.ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplateSelector="{Binding LayoutItem.View.ContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type avalonDockControls:LayoutDocumentTabItem}" TargetType="{x:Type avalonDockControls:LayoutDocumentTabItem}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentTabItem}">
                    <avalonDockControls:DropDownControlArea DropDownContextMenu="{Binding Root.Manager.DocumentContextMenu}" DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                        <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="0,2,0,1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.ColumnSpan="2" Background="{DynamicResource AvalonDock_ThemeMetro_Background}" />
                                <ContentPresenter Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding DocumentHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}" ContentTemplateSelector="{Binding DocumentHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}" />
                                <Button Name="DocumentCloseButton" Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" Margin="5,0,0,0" Visibility="Hidden" ToolTip="{x:Static avalonDockProperties:Resources.Document_Close}" Command="{Binding Path=LayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Image Name="PART_ImgPinClose" Source="Images/PinClose.png" />
                                </Button>
                            </Grid>
                        </Border>
                    </avalonDockControls:DropDownControlArea>
                    <ControlTemplate.Triggers>
                        <DataTrigger Value="true" Binding="{Binding Path=IsSelected}">
                            <Setter TargetName="DocumentCloseButton" Property="UIElement.Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Value="true" Binding="{Binding Path=IsLastFocusedDocument}">
                            <Setter TargetName="DocumentCloseButton" Property="UIElement.Visibility" Value="Visible" />
                            <Setter TargetName="PART_ImgPinClose" Property="Image.Source" Value="Images/PinClose_Dark.png" />
                        </DataTrigger>
                        <DataTrigger Value="true" Binding="{Binding Path=IsActive}">
                            <Setter TargetName="DocumentCloseButton" Property="UIElement.Visibility" Value="Visible" />
                            <Setter TargetName="PART_ImgPinClose" Property="Image.Source" Value="Images/PinClose_Dark.png" />
                        </DataTrigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="DocumentCloseButton" Property="UIElement.Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Value="false" Binding="{Binding Path=CanClose}">
                            <Setter TargetName="DocumentCloseButton" Property="UIElement.Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <Trigger SourceName="DocumentCloseButton" Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgPinClose" Property="Image.Source" Value="Images/PinClose_Black.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type avalonDockControls:LayoutAnchorableTabItem}" TargetType="{x:Type avalonDockControls:LayoutAnchorableTabItem}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableTabItem}">
                    <avalonDockControls:DropDownControlArea DropDownContextMenu="{Binding Root.Manager.AnchorableContextMenu}" DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                        <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
                            <Grid>
                                <ContentPresenter Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}" ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}" />
                                <avalonDockControls:DropDownControlArea Grid.Column="0" DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}" DropDownContextMenuDataContext="{Binding Path=Model, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </Border>
                    </avalonDockControls:DropDownControlArea>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type avalonDockControls:LayoutAnchorableControl}" TargetType="{x:Type avalonDockControls:LayoutAnchorableControl}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableControl}">
                    <Border Name="Bd" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border Name="Header">
                                <avalonDockControls:AnchorablePaneTitle Model="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border>
                            <ContentPresenter Grid.Row="1" FlowDirection="{TemplateBinding FrameworkElement.FlowDirection}" Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsFloating}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="UIElement.Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}" TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
        <Setter Property="Control.Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor1}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor6}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome CornerRadius="0" ResizeBorderThickness="10" CaptionHeight="24" GlassFrameThickness="0" ShowSystemMenu="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
                    <Grid>
                        <Border Name="WindowBorder" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="24" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Border Name="bd" Width="5" VerticalAlignment="Stretch" Background="{DynamicResource AvalonDock_ThemeMetro_BaseColor5}" />
                                <Border Name="Header" Padding="2,0,2,0" Grid.Column="1">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter Content="{Binding Model.RootDocument, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Model.Root.Manager.DocumentTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplateSelector="{Binding Model.Root.Manager.DocumentTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <avalonDockControls:DropDownButton Name="ContextMenuDropdownButton" shell:WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource AvalonDock_ThemeMetro_ToolButtonStyle}" Focusable="False" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" ToolTip="{x:Static avalonDockProperties:Resources.Document_CxMenu_Hint}" DropDownContextMenu="{Binding Model.Root.Manager.DocumentContextMenu, RelativeSource={RelativeSource TemplatedParent}}" DropDownContextMenuDataContext="{Binding Path=RootDocumentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                            <Image Name="PART_ImgPinMenu" Stretch="None" Source="Images/PinMenu.png" Width="13" />
                                        </avalonDockControls:DropDownButton>
                                        <Button Name="PART_PinMaximize" shell:WindowChrome.IsHitTestVisibleInChrome="True" Focusable="False" Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}" Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}" ToolTip="{x:Static avalonDockProperties:Resources.Window_Maximize}" Grid.Column="2" Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolToVisibilityConverter}}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                            <Image Name="PART_ImgPinMaximize" Source="Images/PinMaximize.png" Width="13" />
                                        </Button>
                                        <Button Name="PART_PinRestore" shell:WindowChrome.IsHitTestVisibleInChrome="True" Focusable="False" Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}" Command="{x:Static shell:SystemCommands.RestoreWindowCommand}" ToolTip="{x:Static avalonDockProperties:Resources.Window_Restore}" Grid.Column="2" Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                            <Image Name="PART_ImgPinRestore" Source="Images/PinRestore.png" Width="13" />
                                        </Button>
                                        <Button Name="PART_PinClose" shell:WindowChrome.IsHitTestVisibleInChrome="True" Focusable="False" Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}" ToolTip="{x:Static avalonDockProperties:Resources.Document_Close}" Grid.Column="3" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" Command="{Binding Path=RootDocumentLayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}">
                                            <Image Name="PART_ImgPinClose" Source="Images/PinClose.png" Width="13" />
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}" Grid.Row="1" Grid.ColumnSpan="2" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Window.WindowState" Value="Maximized">
                            <Setter TargetName="WindowBorder" Property="Border.Padding" Value="3" />
                        </Trigger>
                        <DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.RootDocument.IsActive}">
                            <Setter TargetName="bd" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor3}" Property="Border.Background" />
                            <Setter TargetName="Header" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor3}" Property="Border.Background" />
                            <Setter TargetName="Header" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor1}" Property="TextElement.Foreground" />
                        </DataTrigger>
                        <Trigger SourceName="ContextMenuDropdownButton" Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgPinMenu" Property="Image.Source" Value="Images/PinMenu_Black.png" />
                        </Trigger>
                        <Trigger SourceName="ContextMenuDropdownButton" Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="PART_ImgPinMenu" Property="Image.Source" Value="Images/PinMenu_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_PinMaximize" Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgPinMaximize" Property="Image.Source" Value="Images/PinMaximize_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_PinRestore" Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgPinRestore" Property="Image.Source" Value="Images/PinRestore_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_PinClose" Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgPinClose" Property="Image.Source" Value="Images/PinClose_Black.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}" TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
        <Setter Property="Control.Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor1}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor6}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome CornerRadius="0" ResizeBorderThickness="10" CaptionHeight="24" GlassFrameThickness="0" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
                    <Grid>
                        <Border Name="WindowBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="24" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border Name="Header" Padding="2,0,2,0" TextElement.Foreground="{DynamicResource AvalonDock_ThemeMetro_BaseColor2}" Background="{DynamicResource AvalonDock_ThemeMetro_BaseColor1}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Border Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <avalonDockControls:DropDownControlArea DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}" DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ContentPresenter Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </avalonDockControls:DropDownControlArea>
                                        </Border>
                                        <avalonDockControls:DropDownButton Name="SinglePaneContextMenu" shell:WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource AvalonDock_ThemeMetro_ToolButtonStyle}" Focusable="False" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}" Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}" DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                            <Image Name="PART_ImgPinMenu" Stretch="None" Source="Images/PinMenu.png" Width="13" />
                                        </avalonDockControls:DropDownButton>
                                        <Button Name="PART_PinMaximize" shell:WindowChrome.IsHitTestVisibleInChrome="True" Focusable="False" Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}" VerticalAlignment="Center" HorizontalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}" ToolTip="{x:Static avalonDockProperties:Resources.Window_Maximize}" Grid.Column="2" Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolToVisibilityConverter}}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                            <Image Name="PART_ImgPinMaximize" Source="Images/PinMaximize.png" Width="13" />
                                        </Button>
                                        <Button Name="PART_PinRestore" shell:WindowChrome.IsHitTestVisibleInChrome="True" Focusable="False" Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}" VerticalAlignment="Center" HorizontalAlignment="Center" Command="{x:Static shell:SystemCommands.RestoreWindowCommand}" ToolTip="{x:Static avalonDockProperties:Resources.Window_Restore}" Grid.Column="2" Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                            <Image Name="PART_ImgPinRestore" Source="Images/PinRestore.png" Width="13" />
                                        </Button>
                                        <Button Name="PART_PinClose" shell:WindowChrome.IsHitTestVisibleInChrome="True" Focusable="False" Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}" Grid.Column="3" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" Command="{Binding HideWindowCommand, RelativeSource={RelativeSource TemplatedParent}}">
                                            <Image Name="PART_ImgPinClose" Source="Images/PinClose.png" Width="13" />
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}" Grid.Row="1" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Window.WindowState" Value="Maximized">
                            <Setter TargetName="WindowBorder" Property="Border.Padding" Value="3" />
                        </Trigger>
                        <DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}">
                            <Setter Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor3}" TargetName="Header" Property="Border.Background" />
                            <Setter Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor1}" TargetName="Header" Property="TextElement.Foreground" />
                            <Setter TargetName="PART_ImgPinClose" Property="Image.Source" Value="Images/PinClose_Dark.png" />
                            <Setter TargetName="PART_ImgPinRestore" Property="Image.Source" Value="Images/PinRestore_Dark.png" />
                            <Setter TargetName="PART_ImgPinMaximize" Property="Image.Source" Value="Images/PinMaximize_Dark.png" />
                            <Setter TargetName="PART_ImgPinMenu" Property="Image.Source" Value="Images/PinMenu_Dark.png" />
                        </DataTrigger>
                        <Trigger SourceName="SinglePaneContextMenu" Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgPinMenu" Property="Image.Source" Value="Images/PinMenu_Black.png" />
                        </Trigger>
                        <Trigger SourceName="SinglePaneContextMenu" Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="PART_ImgPinMenu" Property="Image.Source" Value="Images/PinMenu_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_PinMaximize" Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgPinMaximize" Property="Image.Source" Value="Images/PinMaximize_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_PinRestore" Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgPinRestore" Property="Image.Source" Value="Images/PinRestore_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_PinClose" Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgPinClose" Property="Image.Source" Value="Images/PinClose_Black.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type avalonDockControls:LayoutAutoHideWindowControl}" TargetType="{x:Type avalonDockControls:LayoutAutoHideWindowControl}">
        <Setter Property="avalonDockControls:LayoutAutoHideWindowControl.Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor1}" />
    </Style>
    <Style x:Key="AvalonDock_ThemeMetro_NavigatorWindowListBoxItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle RadiusY="2" RadiusX="2" Stroke="#8E6EA6F5" StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="AvalonDock_ThemeMetro_NavigatorWindowListBoxItemHoverFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF1FBFF" Offset="0" />
        <GradientStop Color="#FFD5F1FE" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AvalonDock_ThemeMetro_NavigatorWindowListBoxItemSelectedFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFD9F4FF" Offset="0" />
        <GradientStop Color="#FF9BDDFB" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AvalonDock_ThemeMetro_NavigatorWindowListBoxItemSelectedInactiveFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFEEEDED" Offset="0" />
        <GradientStop Color="#FFDDDDDD" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AvalonDock_ThemeMetro_NavigatorWindowListBoxItemSelectedHoverFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFEAF9FF" Offset="0" />
        <GradientStop Color="#FFC9EDFD" Offset="1" />
    </LinearGradientBrush>
    <Style x:Key="AvalonDock_ThemeMetro_NavigatorWindowListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource AvalonDock_ThemeMetro_NavigatorWindowListBoxItemFocusVisual}" />
        <Setter Property="Control.Background" Value="{DynamicResource AvalonDock_ThemeMetro_Background}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_Background}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.Padding" Value="5,0,5,0" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="FrameworkElement.Cursor" Value="Hand" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
                        <Border Name="InnerBorder" BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="11" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Rectangle Name="UpperHighlight" Fill="#75FFFFFF" Visibility="Collapsed" />
                                <ContentPresenter Grid.RowSpan="2" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Value="{StaticResource AvalonDock_ThemeMetro_NavigatorWindowListBoxItemSelectedFill}" Property="Control.Background" />
                            <Setter Property="Control.BorderBrush" Value="#FF98DDFB" />
                            <Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#80FFFFFF" />
                            <Setter TargetName="UpperHighlight" Property="UIElement.Visibility" Value="Visible" />
                            <Setter TargetName="UpperHighlight" Property="Shape.Fill" Value="#40FFFFFF" />
                        </Trigger>
                        <Trigger Property="ListBoxItem.IsSelected" Value="True">
                            <Setter Value="{StaticResource AvalonDock_ThemeMetro_NavigatorWindowListBoxItemSelectedFill}" Property="Control.Background" />
                            <Setter Property="Control.BorderBrush" Value="#FF98DDFB" />
                            <Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#80FFFFFF" />
                            <Setter TargetName="UpperHighlight" Property="UIElement.Visibility" Value="Visible" />
                            <Setter TargetName="UpperHighlight" Property="Shape.Fill" Value="#40FFFFFF" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type avalonDockControls:NavigatorWindow}" TargetType="{x:Type avalonDockControls:NavigatorWindow}">
        <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="Window.SizeToContent" Value="WidthAndHeight" />
        <Setter Property="Window.ResizeMode" Value="NoResize" />
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome ResizeBorderThickness="10" CaptionHeight="16" GlassFrameThickness="4" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:NavigatorWindow}">
                    <Grid>
                        <Border Name="WindowBorder" BorderThickness="1" Background="{DynamicResource AvalonDock_ThemeMetro_BaseColor2}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="54" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid Margin="5">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Image Stretch="None" Source="{Binding SelectedDocument.LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}" Visibility="{Binding SelectedDocument.LayoutElement.IconSource, Converter={StaticResource BoolToVisibilityConverter}}" />
                                        <TextBlock TextTrimming="CharacterEllipsis" Grid.Column="1" VerticalAlignment="Center" TextBlock.FontWeight="Bold" Margin="4,0,0,0" Text="{Binding SelectedDocument.LayoutElement.Title}" />
                                    </Grid>
                                    <TextBlock TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Text="{Binding SelectedDocument.LayoutElement.Description}" />
                                </Grid>
                                <Border Grid.Row="1" BorderThickness="0,1,0,0" Background="{DynamicResource AvalonDock_ThemeMetro_BaseColor7}" MinHeight="200">
                                    <Grid Margin="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid Margin="5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <TextBlock Text="Active Tool Windows" TextBlock.FontWeight="Bold" Margin="0,3,0,4" />
                                            <ListBox Grid.Row="1" ItemContainerStyle="{StaticResource AvalonDock_ThemeMetro_NavigatorWindowListBoxItemStyle}" Background="{DynamicResource AvalonDock_ThemeMetro_Background}" BorderThickness="0" MaxHeight="400" ItemsSource="{Binding Anchorables}" SelectedItem="{Binding SelectedAnchorable, Mode=TwoWay}">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="16" />
                                                                <ColumnDefinition Width="150" />
                                                            </Grid.ColumnDefinitions>
                                                            <Image Stretch="None" Source="{Binding LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}" />
                                                            <TextBlock TextTrimming="CharacterEllipsis" Grid.Column="1" Margin="4,0,0,0" Text="{Binding LayoutElement.Title}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                        </Grid>
                                        <Grid Grid.Column="1" Margin="5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <TextBlock Text="Active Files" TextBlock.FontWeight="Bold" Margin="0,3,0,4" />
                                            <ListBox Grid.Row="1" ItemContainerStyle="{StaticResource AvalonDock_ThemeMetro_NavigatorWindowListBoxItemStyle}" Background="{DynamicResource AvalonDock_ThemeMetro_Background}" BorderThickness="0" MaxHeight="400" ItemsSource="{Binding Documents}" SelectedItem="{Binding SelectedDocument, Mode=TwoWay}">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="16" />
                                                                <ColumnDefinition Width="150" />
                                                            </Grid.ColumnDefinitions>
                                                            <Image Stretch="None" Source="{Binding LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}" />
                                                            <TextBlock TextTrimming="CharacterEllipsis" Grid.Column="1" Margin="4,0,0,0" Text="{Binding LayoutElement.Title}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel Orientation="Vertical" />
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                            </ListBox>
                                        </Grid>
                                    </Grid>
                                </Border>
                                <Grid Grid.Row="2" Margin="5">
                                    <TextBlock VerticalAlignment="Center" Text="{Binding SelectedDocument.LayoutElement.ToolTip}" />
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>